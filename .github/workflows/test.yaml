name: "CI - Test Features"
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  
jobs:

  find-features:
    runs-on: ubuntu-latest
    name: Find features
    outputs:
      folders: ${{ steps.features.outputs.folders }}
    steps:
      - uses: actions/checkout@v3    
      - id: features
        uses: ./.github/actions/list-folder-action
        with:
          path: ./src

  test:
    needs: [find-features]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ${{ fromJson(needs.find-features.outputs.folders )}}
        baseImage: 
          [
            "ubuntu:focal",
            "ubuntu:jammy",
            "ubuntu:bionic",
            "debian:11",
            "debian:10",
            "mcr.microsoft.com/devcontainers/base:ubuntu",
            "mcr.microsoft.com/devcontainers/base:debian",
          ]
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-global:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
